package io.carpe.scalambda.terraform.ast

import io.carpe.scalambda.fixtures.ScalambdaFunctionFixtures
import io.carpe.scalambda.terraform.ast.resources.LambdaFunction
import org.scalatest.flatspec.AnyFlatSpec

class TerraformFileSpec extends AnyFlatSpec with ScalambdaFunctionFixtures {

  "TerraformFile (containing a valid Definition)" should "be serializable" in {
    val testFile = TerraformFile(Seq(
      LambdaFunction(driveCarFunction, s3Bucket = s3Bucket, s3BucketItem = sourcesBucketItem, dependenciesLayer = dependenciesLambdaLayer)
    ), "lambdas.tf")

    val expectation =
      """# This file was autogenerated by the scalambdaTerraform command from the Scalambda SBT plugin!
        |
        |resource "aws_lambda_function" "drive_car_lambda" {
        |  layers = [
        |    aws_lambda_layer_version.dependency_layer.arn
        |  ]
        |  function_name = "DriveCar"
        |  s3_bucket = aws_s3_bucket.testing.id
        |  role = "arn:aws:iam::12345678900:role/lambda_basic_execution"
        |  s3_key = aws_s3_bucket_object.sources.key
        |  memory_size = 1536
        |  source_code_hash = filebase64sha256(aws_s3_bucket_object.sources.source)
        |  s3_object_version = aws_s3_bucket_object.sources.version_id
        |  environment {
        |    variables = {
        |      API = "www.google.com"
        |    }
        |  }
        |  timeout = 900
        |  handler = "io.cars.lambda.DriveCar::handler"
        |  runtime = "java8"
        |}
        |""".stripMargin

    assert(testFile.toString === expectation)
  }

  "TerraformFile (containing multiple valid Definitions)" should "be serializable" in {
    val testFile = TerraformFile(Seq(
      LambdaFunction(driveCarFunction, s3Bucket = s3Bucket, s3BucketItem = sourcesBucketItem, dependenciesLayer = dependenciesLambdaLayer),
      LambdaFunction(flyPlaneFunction, s3Bucket = s3Bucket, s3BucketItem = sourcesBucketItem, dependenciesLayer = dependenciesLambdaLayer)
    ), "lambdas.tf")

    val expectation =
      """# This file was autogenerated by the scalambdaTerraform command from the Scalambda SBT plugin!
        |
        |resource "aws_lambda_function" "drive_car_lambda" {
        |  layers = [
        |    aws_lambda_layer_version.dependency_layer.arn
        |  ]
        |  function_name = "DriveCar"
        |  s3_bucket = aws_s3_bucket.testing.id
        |  role = "arn:aws:iam::12345678900:role/lambda_basic_execution"
        |  s3_key = aws_s3_bucket_object.sources.key
        |  memory_size = 1536
        |  source_code_hash = filebase64sha256(aws_s3_bucket_object.sources.source)
        |  s3_object_version = aws_s3_bucket_object.sources.version_id
        |  environment {
        |    variables = {
        |      API = "www.google.com"
        |    }
        |  }
        |  timeout = 900
        |  handler = "io.cars.lambda.DriveCar::handler"
        |  runtime = "java8"
        |}
        |
        |resource "aws_lambda_function" "fly_plane_lambda" {
        |  layers = [
        |    aws_lambda_layer_version.dependency_layer.arn
        |  ]
        |  function_name = "FlyPlane"
        |  s3_bucket = aws_s3_bucket.testing.id
        |  role = "arn:aws:iam::12345678900:role/lambda_basic_execution"
        |  s3_key = aws_s3_bucket_object.sources.key
        |  memory_size = 256
        |  source_code_hash = filebase64sha256(aws_s3_bucket_object.sources.source)
        |  s3_object_version = aws_s3_bucket_object.sources.version_id
        |  timeout = 30
        |  handler = "io.plane.lambda.FlyPlane::handler"
        |  runtime = "java8"
        |}
        |""".stripMargin

    assert(testFile.toString === expectation)
  }
}
