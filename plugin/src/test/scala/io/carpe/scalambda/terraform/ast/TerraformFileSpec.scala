package io.carpe.scalambda.terraform.ast

import io.carpe.scalambda.conf.function.RuntimeConfig
import io.carpe.scalambda.fixtures.{ScalambdaFunctionFixtures, TerraformBehaviors}
import io.carpe.scalambda.terraform.ast.Definition.Variable
import io.carpe.scalambda.terraform.ast.props.TValue.{TArray, TString, TVariableRef}
import io.carpe.scalambda.terraform.ast.providers.aws.lambda.resources.LambdaFunction
import io.carpe.scalambda.terraform.ast.providers.aws.s3.S3Bucket
import org.scalatest.flatspec.AnyFlatSpec

class TerraformFileSpec extends AnyFlatSpec with ScalambdaFunctionFixtures with TerraformBehaviors {

  ("TerraformFile (containing a valid Definition)" should behave).like(
    printableTerraform(
      {
        TerraformFile(
          Seq(
            Variable(name = "my_test_variable", description = Some("Some test variable"), defaultValue = None)
          ),
          "lambdas.tf"
        )
      }, {
        """# This file was autogenerated by the scalambdaTerraform command from the Scalambda SBT plugin!
          |
          |variable "my_test_variable" {
          |  description = "Some test variable"
          |}
          |""".stripMargin
      }
    )
  )

  ("TerraformFile (containing multiple valid Definitions)" should behave).like(
    printableTerraform(
      {
        TerraformFile(
          Seq(
            Variable(name = "my_test_variable", description = Some("Some test variable"), defaultValue = None),
            S3Bucket(bucketName = "test_bucket", billingTags = Nil, TVariableRef("my_bucket_tags"))
          ),
          "stuff.tf"
        )
      }, {
        """# This file was autogenerated by the scalambdaTerraform command from the Scalambda SBT plugin!
          |
          |variable "my_test_variable" {
          |  description = "Some test variable"
          |}
          |
          |resource "aws_s3_bucket" "test_bucket" {
          |  bucket = "test-bucket-${terraform.workspace}"
          |  force_destroy = true
          |  tags = merge({}, var.my_bucket_tags)
          |}
          |""".stripMargin
      }
    )
  )
}
